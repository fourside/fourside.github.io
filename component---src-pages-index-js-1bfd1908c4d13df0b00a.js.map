{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/pages/index.js"],"names":["Bio","data","useStaticQuery","author","site","siteMetadata","style","display","alignItems","marginBottom","rhythm","src","gravatar","url","alt","name","marginRight","minWidth","borderRadius","margin","BlogIndex","location","siteTitle","title","posts","contentful","edges","map","node","slug","key","boxShadow","to","updatedAt","dangerouslySetInnerHTML","__html","body","childMarkdownRemark","excerpt","pageQuery"],"mappings":"6FAAA,iDA0DeA,IA9CH,WACV,IAAMC,EAAOC,yBAAe,cAepBC,EAAWF,EAAKG,KAAKC,aAArBF,OACR,OACE,yBACEG,MAAO,CACLC,QAAQ,OACRC,WAAW,SACXC,aAAcC,YAAO,OAGvB,yBACEC,IAAKV,EAAKW,SAASC,IACnBC,IAAKX,EAAOY,KACZT,MAAO,CACLU,YAAaN,YAAO,IACpBD,aAAc,EACdQ,SAAU,GACVC,aAAa,UAGjB,uBACEZ,MAAO,CACLa,OAAO,MAFX,cAKa,gCAAShB,EAAOY,U,kCCpDnC,sIA8CeK,UAtCG,SAAC,GAAwB,IAAtBnB,EAAqB,EAArBA,KAAMoB,EAAe,EAAfA,SACnBC,EAAYrB,EAAKG,KAAKC,aAAakB,MACnCC,EAAQvB,EAAKwB,WAAWC,MAE9B,OACE,kBAAC,IAAD,CAAQL,SAAUA,EAAUE,MAAOD,GACjC,kBAAC,IAAD,CAAKC,MAAM,cACX,kBAAC,IAAD,MACCC,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNL,EAAQK,EAAKL,OAASK,EAAKC,KACjC,OACE,6BAASC,IAAKF,EAAKC,MACjB,gCACE,wBACEvB,MAAO,CACLG,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMJ,MAAO,CAAEyB,UAAU,QAAWC,GAAIJ,EAAKC,MAC1CN,IAGL,+BAAQK,EAAKK,YAEf,iCACE,uBACEC,wBAAyB,CACvBC,OAAQP,EAAKQ,KAAKC,oBAAoBC,kBAajD,IAAMC,EAAS","file":"component---src-pages-index-js-1bfd1908c4d13df0b00a.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      gravatar {\n        url\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n          }\n        }\n      }\n    }\n  `)\n\n  const { author } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        alignItems: `center`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <img\n        src={data.gravatar.url}\n        alt={author.name}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n      />\n      <p\n        style={{\n          margin: `0`,\n        }}\n      >\n        Written by <strong>{author.name}</strong>\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.contentful.edges;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Bio />\n      {posts.map(({ node }) => {\n        const title = node.title || node.slug\n        return (\n          <article key={node.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.updatedAt}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.body.childMarkdownRemark.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    contentful: allContentfulBlogPost(sort: {fields: updatedAt, order: DESC}, limit: 1000) {\n      edges {\n        node {\n          title\n          slug\n          body {\n            body\n            childMarkdownRemark {\n              excerpt\n            }\n          }\n          updatedAt(formatString: \"YYYY/MM/DD\")\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
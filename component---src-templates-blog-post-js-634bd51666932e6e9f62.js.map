{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/templates/blog-post.js"],"names":["Bio","data","useStaticQuery","author","site","siteMetadata","style","display","alignItems","marginBottom","rhythm","src","gravatar","url","alt","name","marginRight","minWidth","borderRadius","margin","BlogPostTemplate","pageContext","location","post","contentfulBlogPost","siteTitle","title","previous","next","description","body","childMarkdownRemark","excerpt","marginTop","scale","publishDate","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","slug","rel","pageQuery"],"mappings":"6FAAA,iDA0DeA,IA9CH,WACV,IAAMC,EAAOC,yBAAe,cAepBC,EAAWF,EAAKG,KAAKC,aAArBF,OACR,OACE,yBACEG,MAAO,CACLC,QAAQ,OACRC,WAAW,SACXC,aAAcC,YAAO,OAGvB,yBACEC,IAAKV,EAAKW,SAASC,IACnBC,IAAKX,EAAOY,KACZT,MAAO,CACLU,YAAaN,YAAO,IACpBD,aAAc,EACdQ,SAAU,GACVC,aAAa,UAGjB,uBACEZ,MAAO,CACLa,OAAO,MAFX,cAKa,gCAAShB,EAAOY,U,kCCpDnC,sIAgFeK,UAxEU,SAAC,GAAqC,IAAnCnB,EAAkC,EAAlCA,KAAMoB,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOtB,EAAKuB,mBACZC,EAAYxB,EAAKG,KAAKC,aAAaqB,MACjCC,EAAmBN,EAAnBM,SAAUC,EAASP,EAATO,KAElB,OACE,kBAAC,IAAD,CAAQN,SAAUA,EAAUI,MAAOD,GACjC,kBAAC,IAAD,CACEC,MAAOH,EAAKG,MACZG,YAAaN,EAAKO,KAAKC,oBAAoBC,UAE7C,iCACE,gCACE,wBACE1B,MAAO,CACL2B,UAAWvB,YAAO,GAClBD,aAAc,IAGfc,EAAKG,OAER,uBACEpB,MAAK,iBACA4B,aAAM,IADN,CAEH3B,QAAQ,QACRE,aAAcC,YAAO,MAGtBa,EAAKY,cAGV,6BAASC,wBAAyB,CAAEC,OAAQd,EAAKO,KAAKC,oBAAoBO,QAC1E,wBACEhC,MAAO,CACLG,aAAcC,YAAO,MAGzB,gCACE,kBAAC,IAAD,QAIJ,6BACE,wBACEJ,MAAO,CACLC,QAAQ,OACRgC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGf,GACC,kBAAC,OAAD,CAAMgB,GAAE,IAAMhB,EAASiB,KAAQC,IAAI,QAAnC,KACKlB,EAASD,QAIlB,4BACGE,GACC,kBAAC,OAAD,CAAMe,GAAE,IAAMf,EAAKgB,KAAQC,IAAI,QAC5BjB,EAAKF,MADR,WAaP,IAAMoB,EAAS","file":"component---src-templates-blog-post-js-634bd51666932e6e9f62.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      gravatar {\n        url\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n          }\n        }\n      }\n    }\n  `)\n\n  const { author } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        alignItems: `center`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <img\n        src={data.gravatar.url}\n        alt={author.name}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n      />\n      <p\n        style={{\n          margin: `0`,\n        }}\n      >\n        Written by <strong>{author.name}</strong>\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.contentfulBlogPost;\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.title}\n        description={post.body.childMarkdownRemark.excerpt}\n      />\n      <article>\n        <header>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n          >\n            {post.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.publishDate}\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.body.childMarkdownRemark.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={`/${previous.slug}`} rel=\"prev\">\n                ← {previous.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={`/${next.slug}`} rel=\"next\">\n                {next.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    contentfulBlogPost(slug: { eq: $slug }) {\n      title\n      publishDate(formatString: \"YYYY/MM/DD HH:mm:ss Z\")\n      body {\n        childMarkdownRemark {\n          excerpt(pruneLength: 160)\n          html\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
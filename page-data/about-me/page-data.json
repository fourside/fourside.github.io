{"componentChunkName":"component---src-templates-blog-post-js","path":"/about-me","result":{"data":{"site":{"siteMetadata":{"title":"fourside.github.io"}},"contentfulBlogPost":{"title":"自己紹介ブログ","updatedAt":"2020/09/01 15:45:20 +00:00","body":{"childMarkdownRemark":{"excerpt":"職務経歴書に自己PRがないと指摘され、自分のよわみはすぐ書けるがつよみは書きにくい…と悩んだ末、自己紹介を書くことで代わりになるのでは、さらにブログの記事だったらより書きやすいはず、と思いました。 プログラマーになろうと思ったきっかけ 好ましいと思っていること、大事にしたいこと この辺が書ければ自己PR…","html":"<p>職務経歴書に自己PRがないと指摘され、自分のよわみはすぐ書けるがつよみは書きにくい…と悩んだ末、自己紹介を書くことで代わりになるのでは、さらにブログの記事だったらより書きやすいはず、と思いました。</p>\n<ol>\n<li>プログラマーになろうと思ったきっかけ</li>\n<li>好ましいと思っていること、大事にしたいこと</li>\n</ol>\n<p>この辺が書ければ自己PRとしてもよいのでは。</p>\n<h3>プログラマーになろうと思ったきっかけ</h3>\n<p>当時の僕は特に目指すものもなく派遣スタッフとして働いており、エクセルで住所データを加工する仕事をしていました。ショートカットキーを覚えてしまえばすぐ終わる仕事であったので、持て余した時間でVBAを覚えました。ここで初めてプログラミングの基礎を習得したのですが、新しいことを覚える楽しさ以外にも、高速化テクニックを試したり、他の言語ではどういう書き方をするのか調べたり（VBAは明らかに機能が少なく不自由だった）、学んだことがすぐ活かせるというのも面白く、なにより自分の書いたものが動くことは楽しい、原始的な喜びがあると気づきました。</p>\n<p>その職場では一応意味のあるものを作ることができて、それはエクセルブックから外字を検出するといったものでした（最終的に印字することが目的なので、事前に検出できることには意味がありました）。そのとき参考にしたのが「詳解正規表現」で（俗にいうところのフクロウ本）、初心者が読むにはちょっと難しかったんですが、体系的に知識を得るには（ちょっと背伸びしてでも）技術書というものを読むのが早いということを知りました。そんな感じで、こんな楽しいことが仕事になるんだったらいいなと次第に考えるようになりました。</p>\n<p>その頃、以下の記事を読んだのもその気になった原因のひとつと思います。</p>\n<ul>\n<li><a href=\"http://itpro.nikkeibp.co.jp/article/COLUMN/20090324/327115/?rt=nocnt\">プログラマになりたいあなたへの手紙 - プログラマになりたいあなたへ：ITpro</a></li>\n<li><a href=\"http://pha.hateblo.jp/entry/20080429/1209464163\">知らないと損する職業訓練 - phaの日記</a></li>\n</ul>\n<p>その後、職業訓練を経て、未経験OKな派遣業を営むSIerに拾ってもらうことができました。</p>\n<h3>好ましいと思っていること、大事にしていること</h3>\n<p>プログラマーとして働いていて気にしていることです。当たり前といえば当たり前のことではある。</p>\n<ul>\n<li>\n<p>テキストを好んで使うこと</p>\n<ul>\n<li>\n<p>ドキュメントもインフラも何でもテキストで表現したらdiffも取れるしgitで管理できていいね、くらいの意味</p>\n<ul>\n<li>wordやエクセルで管理するのはウッと思う</li>\n<li>人によってはマークダウンの書式が構造化された文書に見えないかもしれない（プレビューが必須だと面倒臭さが先に立ってしまう）</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>チーム全体で合意を取ること</p>\n<ul>\n<li>プロダクトは自分たちで作っていくという意識を持てる</li>\n</ul>\n</li>\n<li>\n<p>ツールやWebサービスを取り入れること</p>\n<ul>\n<li>どんどん便利になっていきたい</li>\n</ul>\n</li>\n<li>\n<p>自動化</p>\n<ul>\n<li>どんどん便利になっていきたい</li>\n<li>\n<p>時間を生むので圧倒的に正しい</p>\n<ul>\n<li>運用系のツールもどんどん取り入れたいのだけど、チームの合意がないまま使い始めるとつらいはずなので、おすすめしていく運動とセットだよなと思っている</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>便利になること</p>\n<ul>\n<li>プログラマとしての使命だと思う</li>\n</ul>\n</li>\n<li>\n<p>名前付け</p>\n<ul>\n<li>Matzの「名前重要」の教えを念頭に</li>\n<li>\n<p>クラス設計の第一歩と思っている</p>\n<ul>\n<li>この辺がgolang難しい（クラスがない、ファイル分割をどの単位でやっていいのかなど）</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>目的を見失わないこと</p>\n<ul>\n<li>議論が停滞したりちょっと逸れてきたなというとき「どうすれば勝ちなんだっけ」と言うことにしてる</li>\n</ul>\n</li>\n</ul>\n<h3>以上です</h3>\n<p>的外れな感じになっていませんように…。</p>"}}}},"pageContext":{"slug":"about-me","previous":{"body":{"body":"### 問題\nJekyllでpost用のファイルを作るのがめんどくさい。\n- ファイル名が `yyyy-mm-dd-{title}.md`\n    - 数字やハイフンなんて打ちにくいところにあるのに…\n- お決まりのテンプレートを書かなくちゃいけない\n    - dateが特にめんどい\n    - こんなの\n```\n---\nlayout: post\ntitle: \"記事のタイトル\"\ndate: 2018-01-01 00:00:00 +0900\ncategories: vim\n---\n```\n\n### 解決方法\nvim pluginを探すと3つほどぱっと見つかるんだけど、欲しいものは簡単なものだし、自分でvim scriptを書いてみようと思った。\n\n### 欲しいもの\n- コマンドを実行するとバッファが開かれ、そこにテンプレートが展開される\n- コマンドは複数の引数を受け取ってハイフンでつなぎ、それが `yyyy-mm-dd-{title}.md` の `title` になる\n- 吐き出す場所はひとまずカレントディレクトリでいいや\n\n### 参考にしたもの\n- [Vimスクリプト基礎文法最速マスター - 永遠に未完成](http://thinca.hatenablog.com/entry/20100201/1265009821)\n    - 数年前にもvim script書こうと思い立ったことがあって、ヘルプよりこっちを見てしまう\n- [vim-jp » Vim script事始め](http://vim-jp.org/tips/start_vimscript.html)\n    - `:h write-plugin` が丁寧でvimはドキュメントしっかりしてるな～と思った\n    - `q-args` というのを初めて知った。 `args` だとコマンドの引数を文字列として扱ってくれないので不便だなあと悩んでいた。\n    - プラグインの2重ロードを防ぐイディオム、開発のとき邪魔だからコメントアウトしてたんだけど、うっかりコミットしそう\n        - 何回でもロードしていいように書くのが正解なのかな\n- [Vimスクリプトを書いてみよう — KaoriYa](https://www.kaoriya.net/blog/2012/02/19/)\n    - わかりやすい\n- 自分のvimrc\n    - 普段のメモを取るように、日付をファイル名にしたバッファを開くコマンドを作っていたのだった\n    - それもどこからかコピーして持ってきたやつだったはず…\n\n### できたもの\n長いので折りたたみたい…\n\n{% gist d09cbf3a755e292e977e31e592a7ee09 %}\n\n### はまったところ\n- 可変長引数をjoinすると、デリミタが無視されてスペースで連結されてしまう\n    - 仕方なく、joinしてsplitしてjoinした…\n- strftime('%z')から `+0900` みたいなタイムゾーンのオフセットを得たいのだけど、Windowsだと `東京（標準時）` が返ってきてしまう。\n    - [strftime(\"%z\") not working correctly · Issue #860 · vim/vim](https://github.com/vim/vim/issues/860)\n    - 仕方ないっぽいので、Windowsでは `+0900` 固定にした。自分用だし。\n"},"title":"Jekyllのpostをvim scriptで作る","slug":"vim-script-jekyll","updatedAt":"2020-09-01T15:43:36.810Z"},"next":{"body":{"body":"メールをプリントアウトして名刺と合わせて受付をするんだけど、メールに書いてある名前がメールアドレスのアカウントになっていて、名刺に載っている情報と全く一致せず、受付の人を困惑させてしまった。oracleアカウント、個人のやつだしね…。\n\nメモと感想です(後でスライドが公開されるだろうけど)。\n\n## key note\n- リリースモデルについて、わかりやすいけどOpenJDKはLTS出ないのね\n- jdk11が今年9月に出る(予定通り)\n    - JEPsはこれからも追加される\n- mission controll と flight recorder\n    - Eclipse pluginで開けて便利\n        - 下部のペインにスタックトレースからコードにジャンプできる\n    - パフォーマンスの問題3例での見え方\n        - LinkedListのループ内のget\n        - シングルトンインスタンス(ロガーとか)\n            - これどういうシチュエーションの問題だっけ\n        - ループ内でオートボクシングが発生しててGC走りまくってる\n            - 赤いアイコン出ないので問題なさそうに見えるので注意\n                - どう気づけばいいんだ？\n- リリース未定だったりする新しい機能\n    - Valhalla\n    - Portola\n    - Panama\n    - Amber\n    - Loom\n    - ZGC\n- fn\n    - サーバレス\n    - cli\n        - ボイラープレートを吐いたり\n        - ローカルサーバ起動できたり\n            - 個人的にこれがすごく良いと思う\n        - アプリをデプロイできたり\n    - javaで単一の処理で書けてしまうが、裏では複数のコンテナが実行されてるやつのデモ\n        - flickrから車の写真を集めてきて最終的にslackにポストしまくる\n\n## Java in a Wolrd of Containers\n- 翻訳レシーバの付け方がわからなくて英語で聞いてみたけどやっぱり翻訳必要だな…\n- jlink, jdeps\n- musl libc\n- portola\n- AppCDSでコンテナ間のクラスデータのシェア\n- Dockerの設定を考慮するJava起動オプションのサポート\n- 適切なbase imageを使うとサイズの軽量化できる\n\n## Project Valhalla\n- Value Types\n- Generics Specialization\n- Var Handles\n\n- 名前の由来\n    - Value Typesと似てるっしょ\n- シンタックス\n    - 例えばこんなの\n    - ```value class Hoge { } ```\n- クラスのように書けてプリミティブのように振る舞う\n    - ヘッダがない\n        - オブジェクトのメタ情報\n            - 何のインスタンスなのかとか\n    - モニタがない\n        - ロックの情報\n    - キャッシュミスしない\n        - これはどういう理屈だっけ…\n    - \"What Would Int Do\"\n- ジェネリクス\n    - どう扱えるの？\n    - `List<int> list = ...`\n- IntStreamとかToIntFunctionとかなくせる\n- クラスの継承ツリー\n    ```\n    -- any(仮)\n     |- primitive(int/long/...)\n     |- Object\n          | - ...\n    ```\n    - このany(仮)をバイトコードでどう表現するのとか悩んでるらしい\n- VarHandles\n    - Unsafeで扱えたメモリ操作ができる\n- 余談\n    - メモリバリア\n    - volatile\n        - この辺理解できてない\n\n## Curing you Domain Model Anemia...\n- DDDに触れてからのコードスメル\n    - フォーカスする話題の粒度が真逆というか振り幅がでかいというか\n- Martin Fowlerの\"When to make a type\"\n    - 疑問に思ったらクラスを作れ\n- ライブコーディング！\n    - githubやyoutubeにサンプルあるから探してくれ\n    - dddするときのモデルに特定のフレームワークを使っても(よい|ダメ)派がある\n        - 使ってもいい派\n        - 今回はjpaのエンティティをモデルとして扱う\n    - ex. 「primitiveなフィールド、マイナスにしたくない」\n        - オブジェクトにしちゃう\n            - イミュータブルにする\n                - コンストラクタはprivateにして、static factoryを作る\n                    - その中で引数の検査をする\n                - getterで参照を返すときはコピーを返そう\n            - hashcode/eqaulsの実装忘れずに\n            - toStringはデバッグ情報を出すようにすべき\n            - Formattable知ってる？\n                - ビジネス要件での出力\n                - 国際化するときも使える、詳しくはjavadoc\n    - ComparisonChain使ってたけどよく知らない、何がうれしいか調べておく\n    - enumコンストラクタはjava8での書き方があるらしい\n        - 今回は時間の都合でjava7のやり方（おなじみやつ）\n        - コードサンプル調べておく\n    - JPAでのtips\n        - イミュータブルなエンティティにするには\n            - コンストラクタはprotected\n        - フィールドにオブジェクトを持つ場合\n            - それがバリューオブジェクトだったら@ElementCollection\n            - エンティティだったらいつもの@OneToManyなど\n            - 件数が数件程度ならバリューオブジェクト、100件とかになったらエンティティにしたほうがよい\n\n## Get ready for a cloud native...\n- k8s + istio でコンテナのメトリクスを簡単に取得できる話\n- k8sで環境ごとのurlを用意しなくてよくなる\n    - アプリ側で使うのは論理的なURL\n- サイドカーコンテナ\n    - mainコンテナとproxyコンテナのセット\n- istio使うとgrafanaでモニタリングのダッシュボードが表示される\n- eclipse micro profile\n- server.xml\n- リクエストに関する設定(ルール)\n    - コネクションタイムアウト\n    - レスポンスのディレイ設定\n        - テストしやすくてよい！\n- リクエストヘッダにtrace-idみたいなのがついている\n    - これを追うとどのコンテナを通っていったか追跡できる\n- サーキットブレーカーという単語が出てきたけど、それが何だっていうところ聞き逃した…\n    - 言葉の意味は「一時的に止める措置」？\n\n```\nservice meshes: key takeaways\n- transparently add technical cross-cutting concerns.\n- think \"AOP for applications\"\n- routing, load-balancing, resiliency, telemetry, auth\n- integrates well with Java enterprise approach:\n    - business logic is responsibility of the applications\n    - technical concerns are part of the envioronment\n```\n\n### 全体的に\n- Cloudというかコンテナ周りというかにフォーカスされているのを確認した。\n- 面白かったのは新しい機能だったり普段の暮らしに近いコーディング周りだったり。\n    - DDDは座学な印象あるけど実地で見せてもらうと楽しい。\n"},"title":"Java Day Tokyo 2018","slug":"javadaytokyo2018","updatedAt":"2020-09-01T15:46:37.193Z"}}},"staticQueryHashes":["2390137347","3000541721"]}
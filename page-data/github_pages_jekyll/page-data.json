{"componentChunkName":"component---src-templates-blog-post-js","path":"/github_pages_jekyll","result":{"data":{"site":{"siteMetadata":{"title":"fourside.github.io"}},"contentfulBlogPost":{"title":"blog 環境","updatedAt":"2020/09/01 15:39:12 +00:00","body":{"childMarkdownRemark":{"excerpt":"今までメモはローカルに溜めていて、マシンの買い替えなんかが起きるとめんどくさくて、そのせいでDropboxが必須になってしまっていたり、自宅でやったことを職場で確認したいだとかは基本的に困難なので、ブログとして公開することにした。 構成要素と理由 GitHub Pages jekyll on WSL…","html":"<p>今までメモはローカルに溜めていて、マシンの買い替えなんかが起きるとめんどくさくて、そのせいでDropboxが必須になってしまっていたり、自宅でやったことを職場で確認したいだとかは基本的に困難なので、ブログとして公開することにした。</p>\n<h3>構成要素と理由</h3>\n<ul>\n<li><a href=\"https://pages.github.com/\">GitHub Pages</a></li>\n<li><a href=\"https://jekyllrb-ja.github.io/\">jekyll</a></li>\n<li>on WSL</li>\n</ul>\n<p>はてなやMediumでもよいんだろうけどソーシャルな機能はいらないし、tech系の話だったらgithubアカウント上でやったほうがいいかな程度の理由。テキストが手元に残るのもよい。</p>\n<p>あと最近、自宅のマシンをWindows10にしたこともあって、WSLだったらWindows上でrubyの開発環境を整えることに苦労しなくなると思った。cmd.exeからbashと打つだけでlinuxの世界になるのはすごい楽。ただrubyのビルドにえらい時間がかかったので途中で諦め、パッケージマネージャからインストールすることにした。バージョンはちょい古めだけど、nokogiriがすんなり入るのはうれしい。</p>\n<h3>手順</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ sudo apt-get install ruby ruby-dev zlib1g-dev\n$ ruby -v\nruby 2.3.1p112 (2016-04-26) [x86_64-linux-gnu]\n$ gem install jekyll jekyll-feed minima\n$ jekyll -v\njekyll 3.6.2\n$ jekyll new fourside.github.io</code></pre></div>\n<p>zlibの1gってなんだろうね。</p>\n<h3>はまりどころ(未解決)</h3>\n<p>WSL(Ubuntu)でrootだと日本語が表示できない。標準ユーザだとできる。envコマンドの差分を見たけど影響しそうなところがないように見える。どこに差があるのか分からない。ターミナルに弱い。</p>\n<h3>めんどくさいところ</h3>\n<p>postするときにいっぱつでテンプレートを開きたい。ファイル名<code class=\"language-text\">yyyy-mm-dd-{title}.md</code>なんて手で打ちたくないし、ファイルの中身に作成日時まで入れなくちゃいけない。jekyllのコマンドにあってよさそうだけど、ぱっと見ない。</p>\n<p>vim pluginを探すか、これくらいなら自分で作ってみようかなという気持ちになっている。</p>"}}}},"pageContext":{"slug":"github_pages_jekyll","previous":{"body":{"body":"さくらVPSを借りてradikoの録音環境を用意していたんだけど、今年の4月くらいから録音ができなくなっていた。今更だけど確認してみると、`curl https://radiko.jp/area` がOSAKAになってたので、東京の放送局が聴取できない状態だった。radikoの仕様変更じゃなかったので一安心。\n\nまずawsの東京リージョンでt2.microインスタンスを作った。OSはamazon linux。radikoのエリア判定はTOKYOだったのでこれでよし。鍵はawsが生成したもの、インバウンドはsshとhttpのみ、さらにマイIPアドレスから許可するように、screenとvimのrcファイルを用意した。\n\nあとは必要なものをビルドするだけ。\n\n### 必要なもの\n\n- [rtmpdump][rtmpdump]\n- [swftools][swftools]\n- [ffmpeg][ffmpeg]\n\n### 前準備\n```bash\nyum install git\nyum groupinstall \"Development Tools\"\n```\n\n### rtmpdump\nオフィシャルの通り、`git clone git://git.ffmpeg.org/rtmpdump` する。READMEを見るとconfigureしなくてよいみたい。`make SYS=posix && make install`した。\n\n```\n# rtmpdump -v\nrtmpdump: error while loading shared libraries: librtmp.so.1: cannot open shared object file: No such file or directory\n```\n\nsoが読めてないっぽい。ビルドしたsoは`/usr/local/lib`にインストールされてる。\n\n```\n# cat /etc/ld.so.conf\ninclude ld.so.conf.d/.conf\n# echo /usr/local/lib > /etc/ld.so.conf.d/rtmpdump.conf\n# ldconfig\n```\ncf. https://blogs.yahoo.co.jp/mrsd_tangerine/40359620.html\n\n### swftools\n最新のtarballを落としてくる。configure, make, make installですんなりいけた。(さくらVPSで使ってたdebianでは苦労した印象あったけど曖昧）\n\n### ffmpeg\nすっかり忘れてたんだけど旧環境ではlameを使ってて、それをconfigure時に指定してやる必要がある。（指定しなくてもビルドはできるけど、ここでやりたいのはflvからmp3にエンコードすることなので）\n\n[lame][lame]から落としてくる。configure, make, make installですんなりビルドできる。soは/usr/local/libに吐かれる。\nこのあとffmpegのビルド。\n```\n# configure --enable-libmp3lame --disable-x86asm\n# make\n# make install\n```\n\n### 以上\nこんな感じでした。\n\n[rtmpdump]: https://rtmpdump.mplayerhq.hu/\n[swftools]: http://www.swftools.org/download.html\n[ffmpeg]: https://www.ffmpeg.org/download.html\n[lame]: http://lame.sourceforge.net/download.php\n"},"title":"radiko 録音環境","slug":"radiko_infra","updatedAt":"2020-09-01T15:37:08.181Z"},"next":{"body":{"body":"### 問題\nJekyllでpost用のファイルを作るのがめんどくさい。\n- ファイル名が `yyyy-mm-dd-{title}.md`\n    - 数字やハイフンなんて打ちにくいところにあるのに…\n- お決まりのテンプレートを書かなくちゃいけない\n    - dateが特にめんどい\n    - こんなの\n```\n---\nlayout: post\ntitle: \"記事のタイトル\"\ndate: 2018-01-01 00:00:00 +0900\ncategories: vim\n---\n```\n\n### 解決方法\nvim pluginを探すと3つほどぱっと見つかるんだけど、欲しいものは簡単なものだし、自分でvim scriptを書いてみようと思った。\n\n### 欲しいもの\n- コマンドを実行するとバッファが開かれ、そこにテンプレートが展開される\n- コマンドは複数の引数を受け取ってハイフンでつなぎ、それが `yyyy-mm-dd-{title}.md` の `title` になる\n- 吐き出す場所はひとまずカレントディレクトリでいいや\n\n### 参考にしたもの\n- [Vimスクリプト基礎文法最速マスター - 永遠に未完成](http://thinca.hatenablog.com/entry/20100201/1265009821)\n    - 数年前にもvim script書こうと思い立ったことがあって、ヘルプよりこっちを見てしまう\n- [vim-jp » Vim script事始め](http://vim-jp.org/tips/start_vimscript.html)\n    - `:h write-plugin` が丁寧でvimはドキュメントしっかりしてるな～と思った\n    - `q-args` というのを初めて知った。 `args` だとコマンドの引数を文字列として扱ってくれないので不便だなあと悩んでいた。\n    - プラグインの2重ロードを防ぐイディオム、開発のとき邪魔だからコメントアウトしてたんだけど、うっかりコミットしそう\n        - 何回でもロードしていいように書くのが正解なのかな\n- [Vimスクリプトを書いてみよう — KaoriYa](https://www.kaoriya.net/blog/2012/02/19/)\n    - わかりやすい\n- 自分のvimrc\n    - 普段のメモを取るように、日付をファイル名にしたバッファを開くコマンドを作っていたのだった\n    - それもどこからかコピーして持ってきたやつだったはず…\n\n### できたもの\n長いので折りたたみたい…\n\n{% gist d09cbf3a755e292e977e31e592a7ee09 %}\n\n### はまったところ\n- 可変長引数をjoinすると、デリミタが無視されてスペースで連結されてしまう\n    - 仕方なく、joinしてsplitしてjoinした…\n- strftime('%z')から `+0900` みたいなタイムゾーンのオフセットを得たいのだけど、Windowsだと `東京（標準時）` が返ってきてしまう。\n    - [strftime(\"%z\") not working correctly · Issue #860 · vim/vim](https://github.com/vim/vim/issues/860)\n    - 仕方ないっぽいので、Windowsでは `+0900` 固定にした。自分用だし。\n"},"title":"Jekyllのpostをvim scriptで作る","slug":"vim-script-jekyll","updatedAt":"2020-09-01T15:43:36.810Z"}}},"staticQueryHashes":["2390137347","3000541721"]}
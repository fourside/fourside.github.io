{"componentChunkName":"component---src-templates-blog-post-js","path":"/vim-script-jekyll","result":{"data":{"site":{"siteMetadata":{"title":"fourside.github.io"}},"contentfulBlogPost":{"title":"Jekyllのpostをvim scriptで作る","updatedAt":"2020/09/01 15:43:36 +00:00","body":{"childMarkdownRemark":{"excerpt":"問題 Jekyllでpost用のファイルを作るのがめんどくさい。 ファイル名が  数字やハイフンなんて打ちにくいところにあるのに… お決まりのテンプレートを書かなくちゃいけない dateが特にめんどい こんなの 解決方法 vim pluginを探すと…","html":"<h3>問題</h3>\n<p>Jekyllでpost用のファイルを作るのがめんどくさい。</p>\n<ul>\n<li>\n<p>ファイル名が <code class=\"language-text\">yyyy-mm-dd-{title}.md</code></p>\n<ul>\n<li>数字やハイフンなんて打ちにくいところにあるのに…</li>\n</ul>\n</li>\n<li>\n<p>お決まりのテンプレートを書かなくちゃいけない</p>\n<ul>\n<li>dateが特にめんどい</li>\n<li>\n<p>こんなの</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">---\nlayout: post\ntitle: &quot;記事のタイトル&quot;\ndate: 2018-01-01 00:00:00 +0900\ncategories: vim\n---</code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<h3>解決方法</h3>\n<p>vim pluginを探すと3つほどぱっと見つかるんだけど、欲しいものは簡単なものだし、自分でvim scriptを書いてみようと思った。</p>\n<h3>欲しいもの</h3>\n<ul>\n<li>コマンドを実行するとバッファが開かれ、そこにテンプレートが展開される</li>\n<li>コマンドは複数の引数を受け取ってハイフンでつなぎ、それが <code class=\"language-text\">yyyy-mm-dd-{title}.md</code> の <code class=\"language-text\">title</code> になる</li>\n<li>吐き出す場所はひとまずカレントディレクトリでいいや</li>\n</ul>\n<h3>参考にしたもの</h3>\n<ul>\n<li>\n<p><a href=\"http://thinca.hatenablog.com/entry/20100201/1265009821\">Vimスクリプト基礎文法最速マスター - 永遠に未完成</a></p>\n<ul>\n<li>数年前にもvim script書こうと思い立ったことがあって、ヘルプよりこっちを見てしまう</li>\n</ul>\n</li>\n<li>\n<p><a href=\"http://vim-jp.org/tips/start_vimscript.html\">vim-jp » Vim script事始め</a></p>\n<ul>\n<li><code class=\"language-text\">:h write-plugin</code> が丁寧でvimはドキュメントしっかりしてるな～と思った</li>\n<li><code class=\"language-text\">q-args</code> というのを初めて知った。 <code class=\"language-text\">args</code> だとコマンドの引数を文字列として扱ってくれないので不便だなあと悩んでいた。</li>\n<li>\n<p>プラグインの2重ロードを防ぐイディオム、開発のとき邪魔だからコメントアウトしてたんだけど、うっかりコミットしそう</p>\n<ul>\n<li>何回でもロードしていいように書くのが正解なのかな</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://www.kaoriya.net/blog/2012/02/19/\">Vimスクリプトを書いてみよう — KaoriYa</a></p>\n<ul>\n<li>わかりやすい</li>\n</ul>\n</li>\n<li>\n<p>自分のvimrc</p>\n<ul>\n<li>普段のメモを取るように、日付をファイル名にしたバッファを開くコマンドを作っていたのだった</li>\n<li>それもどこからかコピーして持ってきたやつだったはず…</li>\n</ul>\n</li>\n</ul>\n<h3>できたもの</h3>\n<p>長いので折りたたみたい…</p>\n<p>{% gist d09cbf3a755e292e977e31e592a7ee09 %}</p>\n<h3>はまったところ</h3>\n<ul>\n<li>\n<p>可変長引数をjoinすると、デリミタが無視されてスペースで連結されてしまう</p>\n<ul>\n<li>仕方なく、joinしてsplitしてjoinした…</li>\n</ul>\n</li>\n<li>\n<p>strftime(‘%z’)から <code class=\"language-text\">+0900</code> みたいなタイムゾーンのオフセットを得たいのだけど、Windowsだと <code class=\"language-text\">東京（標準時）</code> が返ってきてしまう。</p>\n<ul>\n<li><a href=\"https://github.com/vim/vim/issues/860\">strftime(“%z”) not working correctly · Issue #860 · vim/vim</a></li>\n<li>仕方ないっぽいので、Windowsでは <code class=\"language-text\">+0900</code> 固定にした。自分用だし。</li>\n</ul>\n</li>\n</ul>"}}}},"pageContext":{"slug":"vim-script-jekyll","previous":{"body":{"body":"今までメモはローカルに溜めていて、マシンの買い替えなんかが起きるとめんどくさくて、そのせいでDropboxが必須になってしまっていたり、自宅でやったことを職場で確認したいだとかは基本的に困難なので、ブログとして公開することにした。\n\n### 構成要素と理由\n\n- [GitHub Pages][GitHub Pages]\n- [jekyll][jekyll]\n- on WSL\n\nはてなやMediumでもよいんだろうけどソーシャルな機能はいらないし、tech系の話だったらgithubアカウント上でやったほうがいいかな程度の理由。テキストが手元に残るのもよい。\n\nあと最近、自宅のマシンをWindows10にしたこともあって、WSLだったらWindows上でrubyの開発環境を整えることに苦労しなくなると思った。cmd.exeからbashと打つだけでlinuxの世界になるのはすごい楽。ただrubyのビルドにえらい時間がかかったので途中で諦め、パッケージマネージャからインストールすることにした。バージョンはちょい古めだけど、nokogiriがすんなり入るのはうれしい。\n\n### 手順\n```\n$ sudo apt-get install ruby ruby-dev zlib1g-dev\n$ ruby -v\nruby 2.3.1p112 (2016-04-26) [x86_64-linux-gnu]\n$ gem install jekyll jekyll-feed minima\n$ jekyll -v\njekyll 3.6.2\n$ jekyll new fourside.github.io\n```\n\nzlibの1gってなんだろうね。\n\n### はまりどころ(未解決)\nWSL(Ubuntu)でrootだと日本語が表示できない。標準ユーザだとできる。envコマンドの差分を見たけど影響しそうなところがないように見える。どこに差があるのか分からない。ターミナルに弱い。\n\n### めんどくさいところ\npostするときにいっぱつでテンプレートを開きたい。ファイル名`yyyy-mm-dd-{title}.md`なんて手で打ちたくないし、ファイルの中身に作成日時まで入れなくちゃいけない。jekyllのコマンドにあってよさそうだけど、ぱっと見ない。\n\nvim pluginを探すか、これくらいなら自分で作ってみようかなという気持ちになっている。\n\n[GitHub Pages]: https://pages.github.com/\n[jekyll]: https://jekyllrb-ja.github.io/\n"},"title":"blog 環境","slug":"github_pages_jekyll","updatedAt":"2020-09-01T15:39:12.120Z"},"next":{"body":{"body":"職務経歴書に自己PRがないと指摘され、自分のよわみはすぐ書けるがつよみは書きにくい…と悩んだ末、自己紹介を書くことで代わりになるのでは、さらにブログの記事だったらより書きやすいはず、と思いました。\n\n1. プログラマーになろうと思ったきっかけ\n1. 好ましいと思っていること、大事にしたいこと\n\nこの辺が書ければ自己PRとしてもよいのでは。\n\n### プログラマーになろうと思ったきっかけ\n当時の僕は特に目指すものもなく派遣スタッフとして働いており、エクセルで住所データを加工する仕事をしていました。ショートカットキーを覚えてしまえばすぐ終わる仕事であったので、持て余した時間でVBAを覚えました。ここで初めてプログラミングの基礎を習得したのですが、新しいことを覚える楽しさ以外にも、高速化テクニックを試したり、他の言語ではどういう書き方をするのか調べたり（VBAは明らかに機能が少なく不自由だった）、学んだことがすぐ活かせるというのも面白く、なにより自分の書いたものが動くことは楽しい、原始的な喜びがあると気づきました。\n\nその職場では一応意味のあるものを作ることができて、それはエクセルブックから外字を検出するといったものでした（最終的に印字することが目的なので、事前に検出できることには意味がありました）。そのとき参考にしたのが「詳解正規表現」で（俗にいうところのフクロウ本）、初心者が読むにはちょっと難しかったんですが、体系的に知識を得るには（ちょっと背伸びしてでも）技術書というものを読むのが早いということを知りました。そんな感じで、こんな楽しいことが仕事になるんだったらいいなと次第に考えるようになりました。\n\nその頃、以下の記事を読んだのもその気になった原因のひとつと思います。\n\n- [プログラマになりたいあなたへの手紙 - プログラマになりたいあなたへ：ITpro](http://itpro.nikkeibp.co.jp/article/COLUMN/20090324/327115/?rt=nocnt)\n- [知らないと損する職業訓練 - phaの日記](http://pha.hateblo.jp/entry/20080429/1209464163)\n\nその後、職業訓練を経て、未経験OKな派遣業を営むSIerに拾ってもらうことができました。\n\n### 好ましいと思っていること、大事にしていること\nプログラマーとして働いていて気にしていることです。当たり前といえば当たり前のことではある。\n\n- テキストを好んで使うこと\n    - ドキュメントもインフラも何でもテキストで表現したらdiffも取れるしgitで管理できていいね、くらいの意味\n        - wordやエクセルで管理するのはウッと思う\n        - 人によってはマークダウンの書式が構造化された文書に見えないかもしれない（プレビューが必須だと面倒臭さが先に立ってしまう）\n- チーム全体で合意を取ること\n    - プロダクトは自分たちで作っていくという意識を持てる\n- ツールやWebサービスを取り入れること\n    - どんどん便利になっていきたい\n- 自動化\n    - どんどん便利になっていきたい\n    - 時間を生むので圧倒的に正しい\n        - 運用系のツールもどんどん取り入れたいのだけど、チームの合意がないまま使い始めるとつらいはずなので、おすすめしていく運動とセットだよなと思っている\n- 便利になること\n    - プログラマとしての使命だと思う\n- 名前付け\n    - Matzの「名前重要」の教えを念頭に\n    - クラス設計の第一歩と思っている\n        - この辺がgolang難しい（クラスがない、ファイル分割をどの単位でやっていいのかなど）\n- 目的を見失わないこと\n    - 議論が停滞したりちょっと逸れてきたなというとき「どうすれば勝ちなんだっけ」と言うことにしてる\n\n### 以上です\n的外れな感じになっていませんように…。\n"},"title":"自己紹介ブログ","slug":"about-me","updatedAt":"2020-09-01T15:45:20.522Z"}}},"staticQueryHashes":["2390137347","3000541721"]}
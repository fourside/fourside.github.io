{"version":3,"file":"component---src-pages-index-tsx-b2bcd5b826f6d0b84c6c.js","mappings":"+JA0DA,IArDiB,WAAO,IAAD,MACfA,GAAOC,EAAAA,EAAAA,gBAAc,aAc3B,QAAgCC,KAA5B,UAAAF,EAAKG,YAAL,eAAWC,cACb,OAAO,oEAET,QAA2BF,KAAvB,UAAAF,EAAKK,gBAAL,eAAeC,KACjB,OAAO,+DAGT,IAAMC,GAAa,UAAAP,EAAKG,KAAKC,aAAaI,cAAvB,eAA+BC,OAAQ,GAE1D,OACE,uBACEC,MAAO,CACLC,QAAQ,OACRC,WAAW,SACXC,cAAcC,EAAAA,EAAAA,IAAO,OAGvB,uBACEC,IAAKf,EAAKK,SAASC,IACnBU,IAAKT,EACLG,MAAO,CACLO,aAAaH,EAAAA,EAAAA,IAAO,IACpBD,aAAc,EACdK,SAAU,GACVC,aAAa,UAGjB,qBACET,MAAO,CACLU,OAAO,MAFX,cAKa,8BAASb,O,4FCoB5B,UAtCyC,SAAC,GAAwB,IAAtBP,EAAqB,EAArBA,KAAMqB,EAAe,EAAfA,SAC1CC,EAAYtB,EAAKG,KAAKC,aAAamB,MACnCC,EAAQxB,EAAKyB,WAAWC,MAE9B,OACE,gBAAC,IAAD,CAAQL,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,MACA,gBAAC,IAAD,MACCE,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNL,EAAQK,EAAKL,OAASK,EAAKC,KACjC,OACE,2BAASC,IAAKF,EAAKC,MACjB,8BACE,sBACEnB,MAAO,CACLG,cAAcC,EAAAA,EAAAA,IAAO,EAAI,KAG3B,gBAAC,EAAAiB,KAAD,CAAMrB,MAAO,CAAEsB,UAAU,QAAWC,GAAIL,EAAKC,MAC1CN,IAGL,6BAAQK,EAAKM,cAEf,+BACE,qBACEC,wBAAyB,CACvBC,OAAQR,EAAKS,KAAKC,oBAAoBC","sources":["webpack://fourside.github.io/./src/components/bio.tsx","webpack://fourside.github.io/./src/pages/index.tsx"],"sourcesContent":["import React, { VFC } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport { rhythm } from \"../utils/typography\";\n\nconst Bio: VFC = () => {\n  const data = useStaticQuery<GatsbyTypes.BioQuery>(graphql`\n    query Bio {\n      gravatar {\n        url\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n          }\n        }\n      }\n    }\n  `);\n  if (data.site?.siteMetadata === undefined) {\n    return <div>Error: site.siteMetadata is undefined</div>;\n  }\n  if (data.gravatar?.url === undefined) {\n    return <div>Error: gravatar.url is undefined</div>;\n  }\n\n  const authorName = data.site.siteMetadata.author?.name || \"\";\n\n  return (\n    <div\n      style={{\n        display: `flex`,\n        alignItems: `center`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <img\n        src={data.gravatar.url}\n        alt={authorName}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n      />\n      <p\n        style={{\n          margin: `0`,\n        }}\n      >\n        Written by <strong>{authorName}</strong>\n      </p>\n    </div>\n  );\n};\n\nexport default Bio;\n","import React, { VFC } from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport type { PageProps } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { rhythm } from \"../utils/typography\";\n\ntype Edge = {\n  node: {\n    title: string;\n    slug: string;\n    body: {\n      body: string;\n      childMarkdownRemark: {\n        excerpt: string;\n      };\n    };\n    publishDate: string;\n  };\n};\n\ninterface Props {\n  site: {\n    siteMetadata: {\n      title: string;\n    };\n  };\n  contentful: {\n    edges: Edge[];\n  };\n}\n\nconst BlogIndex: VFC<PageProps<Props>> = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.contentful.edges;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo />\n      <Bio />\n      {posts.map(({ node }) => {\n        const title = node.title || node.slug;\n        return (\n          <article key={node.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.publishDate}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.body.childMarkdownRemark.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        );\n      })}\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query IndexPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    contentful: allContentfulBlogPost(sort: { fields: publishDate, order: DESC }, limit: 1000) {\n      edges {\n        node {\n          title\n          slug\n          body {\n            body\n            childMarkdownRemark {\n              excerpt\n            }\n          }\n          publishDate(formatString: \"YYYY/MM/DD\")\n        }\n      }\n    }\n  }\n`;\n"],"names":["data","useStaticQuery","undefined","site","siteMetadata","gravatar","url","authorName","author","name","style","display","alignItems","marginBottom","rhythm","src","alt","marginRight","minWidth","borderRadius","margin","location","siteTitle","title","posts","contentful","edges","map","node","slug","key","Link","boxShadow","to","publishDate","dangerouslySetInnerHTML","__html","body","childMarkdownRemark","excerpt"],"sourceRoot":""}